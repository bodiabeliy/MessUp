{"version":3,"sources":["utils/consts.js","components/Navbar.js","components/Login.js","components/Chat.js","routes.js","components/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","authorization","useContext","Context","useAuthState","user","AppBar","className","position","Toolbar","Grid","container","justify","to","Button","onClick","signOut","variant","color","Login","useState","open","setOpen","a","provider","firebase","auth","GoogleAuthProvider","signInWithPopup","console","log","Container","style","height","window","innerHeight","alignItems","p","Box","Dialog","onClose","aria-labelledby","aria-describedby","DialogActions","microphone","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","Chat","publicRoutes","path","Component","privateRoutes","firestore","values","setValue","useCollectionData","collection","orderBy","messages","isListening","setListening","note","setNotes","add","uid","displayName","photoAvatar","photoURL","text","createdAt","FieldValue","serverTimestamp","useEffect","HandleListening","start","onend","stop","onstart","onresult","event","transcription","Array","from","results","map","result","transcript","join","onerror","error","message","background","marginLeft","Avatar","marginRight","src","fontSize","textAlign","toDate","toString","substring","direction","width","spacing","item","TextField","onChange","e","target","value","InputProps","endAdornment","InputAdornment","prevState","Tooltip","title","arrow","Chip","navigator","clipboard","writeText","size","label","marginTop","get","then","querySnapshot","docs","doc","ref","delete","fullWidth","startIcon","AppRouter","component","exect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.480a13a6.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat'\r\nexport const EXIT = '/'","import React, { Fragment, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'; \r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { CHAT_ROUTE, EXIT } from '../utils/consts';\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport {Context} from '../index'\r\n\r\nfunction Navbar() {\r\n\r\n const {authorization} = useContext(Context)\r\n const [user] = useAuthState(authorization)\r\n\r\n return (\r\n  <AppBar className='navbar_container' position=\"static\">\r\n  <Toolbar>\r\n   <Grid container justify={'flex-end'}>\r\n    {user ? \r\n     <Fragment>\r\n      <Link \r\n       className='navbar_link'\r\n       to={CHAT_ROUTE}\r\n       >\r\n        <Button onClick={() => {authorization.signOut()}} className='navbar_logBtn' variant={'outlined'} color=\"inherit\">Выйти</Button>\r\n      </Link>\r\n     </Fragment>\r\n     :\r\n     <Fragment>\r\n     <Link \r\n      className='navbar_link'\r\n      to={EXIT}\r\n      >\r\n     <Button variant={'outlined'} color=\"inherit\">Логин</Button>\r\n     </Link>\r\n    </Fragment>\r\n    }\r\n   </Grid>\r\n\r\n  </Toolbar>\r\n</AppBar>\r\n );\r\n}\r\n\r\nexport default Navbar;","import React, {useContext, useState} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Context} from '../index'\r\nimport firebase from 'firebase'\r\n\r\nfunction Login() {\r\n\r\n const [open, setOpen] = useState(true);\r\n\r\n  const ShowBtnPopup = () => {\r\n    setOpen(false);\r\n  };\r\n  // useContext - хук для передачи пропсов минуя родительско-дочернюю связь\r\n  const {authorization} = useContext(Context)\r\n  // вхлд с помощью системы\r\n  const Login = async() => {\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    const {user} = await authorization.signInWithPopup(provider)\r\n    console.log(user);\r\n  }\r\n return (\r\n  <div>\r\n   <Container>\r\n   <Grid \r\n    className='form-grid_container' \r\n    container \r\n    style={{height: window.innerHeight - 50}}\r\n    justify={'center'}\r\n    alignItems={'center'}\r\n    >\r\n     <Grid p={5}\r\n      container\r\n      alignItems={'center'}\r\n      justify={'center'}\r\n     >\r\n     <Box>\r\n     <Dialog\r\n        open={open}\r\n        onClose={ShowBtnPopup}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogActions>\r\n          <Button onClick={Login} variant={'outlined'}>Войти с помощью Google</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n     </Box>\r\n     </Grid>\r\n\r\n   </Grid>\r\n   </Container>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Login;","import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport firebase from 'firebase';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { Context } from '../index';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\n\r\nconst speechRecord = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst microphone = new speechRecord()\r\nmicrophone.continuous = true\r\nmicrophone.interimResults = true\r\nmicrophone.lang = 'ru'\r\n\r\nfunction Chat() {\r\n const {authorization, firestore} = useContext(Context)\r\n const [user] = useAuthState(authorization)\r\n const [values, setValue] = useState('')\r\n const [messages =[]] = useCollectionData(\r\n    firestore.collection('messages').orderBy('createdAt')\r\n  )\r\n  const [isListening, setListening] = useState(false)\r\n  const [note, setNotes] = useState('')\r\n  const [saveText, setSaveText] = useState([])\r\n\r\n\r\n // ф-я отправки сообщений\r\n  async function SendMessage () {\r\n   firestore.collection('messages').add({\r\n    uid: user.uid,\r\n    displayName: user.displayName,\r\n    photoAvatar: user.photoURL,\r\n    text: values,\r\n    createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n   })\r\n   setValue('')\r\n }\r\n\r\n\r\n function DeleteMessage() {\r\n    firestore.collection('messages')\r\n    .get()\r\n    .then(querySnapshot => {\r\n        querySnapshot.docs.map(doc => {\r\n        doc.ref.delete()\r\n        });\r\n    });\r\n }\r\n\r\n  useEffect(() => {\r\n    HandleListening()\r\n  }, [isListening])\r\n\r\n\r\n  const HandleListening = () => {\r\n    if(isListening) {\r\n      microphone.start()\r\n      microphone.onend = () => {\r\n        console.log('continue...');\r\n        microphone.start()\r\n      }\r\n    }\r\n    else {\r\n      microphone.stop()\r\n      microphone.onend = () => {\r\n        console.log('Micro stop worked');\r\n      }\r\n    }\r\n    microphone.onstart = () => {\r\n      console.log('Micro on');\r\n    }\r\n    microphone.onresult = (event) => {\r\n      const transcription = Array.from(event.results)\r\n      .map(result => result[0])\r\n      .map(result => result.transcript)\r\n      .join('')\r\n      setNotes(transcription)\r\n      console.log(\"Voice:\",transcription);\r\n      microphone.onerror = (event) => {\r\n        console.log(event.error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const HandleSave = () => {\r\n    setSaveText([...saveText, note])\r\n    setNotes('')\r\n  }\r\n\r\n\r\n return (\r\n  <div>\r\n   <Container>\r\n    <Grid\r\n     container \r\n     style={{height: window.innerHeight - 50}}\r\n     justify={'center'}\r\n     >\r\n      <div className='chat__field'>\r\n        {messages.map(message => \r\n        \r\n          <div className=\"chat__sendMessage\"\r\n          style={{\r\n            background: user.uid === message.uid ? '#e1e1e1' : '#caa3ff',\r\n            marginLeft: user.uid === message.uid ? '0' : '15%'\r\n           }}\r\n          >\r\n            <Grid>\r\n             <div className=\"line\">\r\n             <Avatar \r\n                style={{marginRight:'8px'}}\r\n                src={message.photoAvatar}\r\n              />\r\n              <div>\r\n              <span className='chat__SendTime' style={{fontSize: '12px', textAlign: 'right', marginLeft: '82%'}}> {message.createdAt.toDate().toString().substring(16,21)}</span> <br />\r\n               <span className='chat__personName'> {message.displayName}</span> <br />\r\n                {message.text}\r\n              </div>\r\n             </div>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Grid\r\n         container\r\n         direction={'column'}\r\n         alignItems={'center'}\r\n         style={{width: '80%',}}\r\n        >\r\n         <Grid container spacing={1} alignItems=\"center\">         \r\n          <Grid item>\r\n\r\n         <div className=\"text-field \">\r\n         <TextField\r\n          onChange={e => setValue(e.target.value)}\r\n          variant='outlined'\r\n          InputProps={{\r\n            endAdornment: \r\n            <InputAdornment>\r\n             <SendIcon \r\n                onClick={SendMessage}\r\n              />\r\n            </InputAdornment>,\r\n          }}\r\n          />\r\n           {isListening ?\r\n           <Button onClick={() => setListening(prevState => !prevState)} >\r\n            <RecordVoiceOverIcon />\r\n          </Button>\r\n           : \r\n           <Button onClick={() => setListening(prevState => !prevState)}>\r\n              <PauseIcon />\r\n          </Button>\r\n           }\r\n         </div>\r\n\r\n          </Grid>\r\n          <Grid item>\r\n              {note ?\r\n                <Tooltip title=\" Кликните, чтобы скопировать выделенный текст\" arrow>\r\n                <Chip  onClick={() =>  navigator.clipboard.writeText(`${note}`)} size=\"small\" label={note} variant=\"outlined\" />\r\n              </Tooltip>\r\n              :''}\r\n\r\n          </Grid>\r\n            <Button\r\n            style={{marginTop: '20px'}}\r\n              onClick={DeleteMessage}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<DeleteIcon />}\r\n            >\r\n              To TRUSH\r\n            </Button>\r\n            {/* <h2>Save Record Text (test)</h2>\r\n            {saveText.map(message => (\r\n              <p key={message}>{message}</p>\r\n            ))} */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n   </Container>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Chat;","import {CHAT_ROUTE, LOGIN_ROUTE} from './utils/consts'\r\nimport Login from './components/Login'\r\nimport Chat from './components/Chat'\r\n\r\n// все доступные маршуты для пользователей\r\nexport const publicRoutes = [\r\n {\r\n  path: LOGIN_ROUTE,\r\n  Component: Login\r\n }\r\n]\r\n// только для зарегистрированых  пользователей\r\nexport const privateRoutes = [\r\n {\r\n  path: CHAT_ROUTE,\r\n  Component: Chat\r\n }\r\n \r\n]","import React, {useContext} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes} from '../routes'\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts';\r\nimport {useAuthState} from 'react-firebase-hooks/auth'\r\nimport {Context} from '../index'\r\n\r\nfunction AppRouter() {\r\n // рендеринг страницы для зарегистрированого пользователя \r\n const {authorization} = useContext(Context)\r\n const [user] = useAuthState(authorization)\r\n console.log(user);\r\n return user ? \r\n   (\r\n    <Switch>\r\n     {privateRoutes.map(({path, Component}) => \r\n      <Route key={path} path={path} component={Component} exect={true} />\r\n     )}\r\n     <Redirect to={CHAT_ROUTE} />\r\n    </Switch>\r\n   )\r\n   :\r\n    // рендеринг страницы для зарегистрированого пользователя \r\n   (\r\n    <Switch>\r\n      {publicRoutes.map(({path, Component}) => \r\n        <Route key={path} path={path} component={Component} exect={true} />\r\n      )}\r\n      <Redirect to={LOGIN_ROUTE} />\r\n    </Switch>\r\n   )\r\n}\r\n\r\nexport default AppRouter;","import React, {useContext} from 'react';\nimport { BrowserRouter } from 'react-router-dom'; \nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport Navbar from './components/Navbar'\nimport AppRouter from './components/AppRouter'\nimport {Context} from './index'\n\n\nfunction App() {\n  const {authorization} = useContext(Context)\n  const [loading] = useAuthState(authorization)\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\n// Initialize Firebase\nfirebase.initializeApp(\n  {\n    apiKey: \"AIzaSyClxns3GYA-V9RmgDIDQkNtTwZy59ugfuQ\",\n    authDomain: \"chat-react-2ff9d.firebaseapp.com\",\n    projectId: \"chat-react-2ff9d\",\n    storageBucket: \"chat-react-2ff9d.appspot.com\",\n    messagingSenderId: \"560825640305\",\n    appId: \"1:560825640305:web:100e2fdb7d31233c2002d0\"\n  }\n);\n  // useContext - хук для передачи пропсов минуя родительско-дочернюю связь\nexport const Context = createContext(null)\nconst authorization = firebase.auth()\nconst firestore = firebase.firestore()\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context.Provider  value ={{\n      firebase,\n      authorization, \n      firestore\n    }}>\n    <App />\n    </Context.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}